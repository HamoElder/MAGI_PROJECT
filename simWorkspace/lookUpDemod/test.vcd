$version Generated by VerilatedVcd $end
$date Fri Dec 10 14:58:07 2021
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 )' clk $end
  $var wire 16 w& data_flow_mod_iq_payload_cha_i [15:0] $end
  $var wire 16 !' data_flow_mod_iq_payload_cha_q [15:0] $end
  $var wire  1 o& data_flow_mod_iq_valid $end
  $var wire  8 g& data_flow_unit_data_payload [7:0] $end
  $var wire  1 _& data_flow_unit_data_valid $end
  $var wire  2 W& iq_shift [1:0] $end
  $var wire  1 1' reset $end
  $var wire  4 ?& w_addr [3:0] $end
  $var wire 32 G& w_data [31:0] $end
  $var wire  1 7& w_en $end
  $var wire  2 O& w_sel [1:0] $end
  $scope module lookUpDemod $end
   $var wire  1 )' clk $end
   $var wire  4 !# code_mem_i_0 [3:0] $end
   $var wire  4 )# code_mem_i_1 [3:0] $end
   $var wire  4 q# code_mem_i_10 [3:0] $end
   $var wire  4 y# code_mem_i_11 [3:0] $end
   $var wire  4 #$ code_mem_i_12 [3:0] $end
   $var wire  4 +$ code_mem_i_13 [3:0] $end
   $var wire  4 3$ code_mem_i_14 [3:0] $end
   $var wire  4 ;$ code_mem_i_15 [3:0] $end
   $var wire  4 1# code_mem_i_2 [3:0] $end
   $var wire  4 9# code_mem_i_3 [3:0] $end
   $var wire  4 A# code_mem_i_4 [3:0] $end
   $var wire  4 I# code_mem_i_5 [3:0] $end
   $var wire  4 Q# code_mem_i_6 [3:0] $end
   $var wire  4 Y# code_mem_i_7 [3:0] $end
   $var wire  4 a# code_mem_i_8 [3:0] $end
   $var wire  4 i# code_mem_i_9 [3:0] $end
   $var wire  4 C$ code_mem_q_0 [3:0] $end
   $var wire  4 K$ code_mem_q_1 [3:0] $end
   $var wire  4 5% code_mem_q_10 [3:0] $end
   $var wire  4 =% code_mem_q_11 [3:0] $end
   $var wire  4 E% code_mem_q_12 [3:0] $end
   $var wire  4 M% code_mem_q_13 [3:0] $end
   $var wire  4 U% code_mem_q_14 [3:0] $end
   $var wire  4 ]% code_mem_q_15 [3:0] $end
   $var wire  4 S$ code_mem_q_2 [3:0] $end
   $var wire  4 [$ code_mem_q_3 [3:0] $end
   $var wire  4 c$ code_mem_q_4 [3:0] $end
   $var wire  4 k$ code_mem_q_5 [3:0] $end
   $var wire  4 s$ code_mem_q_6 [3:0] $end
   $var wire  4 {$ code_mem_q_7 [3:0] $end
   $var wire  4 %% code_mem_q_8 [3:0] $end
   $var wire  4 -% code_mem_q_9 [3:0] $end
   $var wire 15 }% compTable_i [14:0] $end
   $var wire 15 '& compTable_q [14:0] $end
   $var wire 15 # comp_cmp_i [14:0] $end
   $var wire 15 + comp_cmp_q [14:0] $end
   $var wire 16 K comp_mem_i_0 [15:0] $end
   $var wire 16 S comp_mem_i_1 [15:0] $end
   $var wire 16 =! comp_mem_i_10 [15:0] $end
   $var wire 16 E! comp_mem_i_11 [15:0] $end
   $var wire 16 M! comp_mem_i_12 [15:0] $end
   $var wire 16 U! comp_mem_i_13 [15:0] $end
   $var wire 16 ]! comp_mem_i_14 [15:0] $end
   $var wire 16 [ comp_mem_i_2 [15:0] $end
   $var wire 16 c comp_mem_i_3 [15:0] $end
   $var wire 16 k comp_mem_i_4 [15:0] $end
   $var wire 16 s comp_mem_i_5 [15:0] $end
   $var wire 16 { comp_mem_i_6 [15:0] $end
   $var wire 16 %! comp_mem_i_7 [15:0] $end
   $var wire 16 -! comp_mem_i_8 [15:0] $end
   $var wire 16 5! comp_mem_i_9 [15:0] $end
   $var wire 16 e! comp_mem_q_0 [15:0] $end
   $var wire 16 m! comp_mem_q_1 [15:0] $end
   $var wire 16 W" comp_mem_q_10 [15:0] $end
   $var wire 16 _" comp_mem_q_11 [15:0] $end
   $var wire 16 g" comp_mem_q_12 [15:0] $end
   $var wire 16 o" comp_mem_q_13 [15:0] $end
   $var wire 16 w" comp_mem_q_14 [15:0] $end
   $var wire 16 u! comp_mem_q_2 [15:0] $end
   $var wire 16 }! comp_mem_q_3 [15:0] $end
   $var wire 16 '" comp_mem_q_4 [15:0] $end
   $var wire 16 /" comp_mem_q_5 [15:0] $end
   $var wire 16 7" comp_mem_q_6 [15:0] $end
   $var wire 16 ?" comp_mem_q_7 [15:0] $end
   $var wire 16 G" comp_mem_q_8 [15:0] $end
   $var wire 16 O" comp_mem_q_9 [15:0] $end
   $var wire 16 w& data_flow_mod_iq_payload_cha_i [15:0] $end
   $var wire 16 !' data_flow_mod_iq_payload_cha_q [15:0] $end
   $var wire  1 o& data_flow_mod_iq_valid $end
   $var wire  8 g& data_flow_unit_data_payload [7:0] $end
   $var wire  1 _& data_flow_unit_data_valid $end
   $var wire 16 3 demod_data_i [15:0] $end
   $var wire 16 ; demod_data_q [15:0] $end
   $var wire  1 /& demod_valid $end
   $var wire  1 u% demod_valid_iq $end
   $var wire  2 W& iq_shift [1:0] $end
   $var wire  1 1' reset $end
   $var wire  4 e% unit_data_i [3:0] $end
   $var wire  4 m% unit_data_q [3:0] $end
   $var wire  1 C unit_valid $end
   $var wire  4 ?& w_addr [3:0] $end
   $var wire 32 G& w_data [31:0] $end
   $var wire  1 7& w_en $end
   $var wire  2 O& w_sel [1:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b001010100000001 #
b010010010001010 +
b1100001000011101 3
b1110000010011000 ;
0C
b1010010001101010 K
b1110000111111010 S
b0101010011001001 [
b0010001000000001 c
b0010010111110101 k
b0000010110011101 s
b0000100101010110 {
b1111110011110111 %!
b1010111101000101 -!
b0100001011111001 5!
b1001001000001011 =!
b0111010111011111 E!
b1000111111010100 M!
b1110100001001110 U!
b0001111110100010 ]!
b0001111001100010 e!
b1000000111100011 m!
b1111001010111000 u!
b1010111000111110 }!
b0100010010001011 '"
b0100100000010000 /"
b1110001010100010 7"
b1000011010011000 ?"
b1110010010011001 G"
b0011000010101010 O"
b1011001101000101 W"
b0010010110011010 _"
b0100011100111111 g"
b1010011111111000 o"
b1110011100010010 w"
b1000 !#
b1100 )#
b1010 1#
b1101 9#
b0011 A#
b0010 I#
b1100 Q#
b0011 Y#
b1100 a#
b1111 i#
b1101 q#
b0111 y#
b1101 #$
b0101 +$
b1101 3$
b0011 ;$
b1101 C$
b0010 K$
b0110 S$
b1010 [$
b0001 c$
b0000 k$
b1110 s$
b0100 {$
b1111 %%
b1110 -%
b0010 5%
b1001 =%
b1000 E%
b0001 M%
b1010 U%
b1010 ]%
b0111 e%
b1111 m%
0u%
b111110001111011 }%
b100011100110111 '&
0/&
07&
b1111 ?&
b01100011011110110101011110111111 G&
b10 O&
b11 W&
0_&
b00111111 g&
1o&
b1010111010110010 w&
b1101001111010011 !'
1)'
11'
