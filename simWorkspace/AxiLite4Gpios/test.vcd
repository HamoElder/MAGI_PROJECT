$version Generated by VerilatedVcd $end
$date Wed Jan  5 03:58:29 2022
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  8 V axil4Ctrl_araddr [7:0] $end
  $var wire  3 W axil4Ctrl_arprot [2:0] $end
  $var wire  1 U axil4Ctrl_arready $end
  $var wire  1 T axil4Ctrl_arvalid $end
  $var wire  8 K axil4Ctrl_awaddr [7:0] $end
  $var wire  3 L axil4Ctrl_awprot [2:0] $end
  $var wire  1 J axil4Ctrl_awready $end
  $var wire  1 I axil4Ctrl_awvalid $end
  $var wire  1 R axil4Ctrl_bready $end
  $var wire  2 S axil4Ctrl_bresp [1:0] $end
  $var wire  1 Q axil4Ctrl_bvalid $end
  $var wire 32 Z axil4Ctrl_rdata [31:0] $end
  $var wire  1 Y axil4Ctrl_rready $end
  $var wire  2 [ axil4Ctrl_rresp [1:0] $end
  $var wire  1 X axil4Ctrl_rvalid $end
  $var wire 32 O axil4Ctrl_wdata [31:0] $end
  $var wire  1 N axil4Ctrl_wready $end
  $var wire  4 P axil4Ctrl_wstrb [3:0] $end
  $var wire  1 M axil4Ctrl_wvalid $end
  $var wire  1 ^ clk $end
  $var wire 14 \ gpio_0 [13:0] $end
  $var wire  1 ] interrupt_0 $end
  $var wire  1 _ reset $end
  $scope module AxiLite4Gpios $end
   $var wire  8 : axil4Ctrl_ar_rData_addr [7:0] $end
   $var wire  3 ; axil4Ctrl_ar_rData_prot [2:0] $end
   $var wire  1 A axil4Ctrl_ar_rValid $end
   $var wire  8 : axil4Ctrl_ar_readDataStage_payload_addr [7:0] $end
   $var wire  3 ; axil4Ctrl_ar_readDataStage_payload_prot [2:0] $end
   $var wire  1 Y axil4Ctrl_ar_readDataStage_ready $end
   $var wire  1 A axil4Ctrl_ar_readDataStage_valid $end
   $var wire  8 V axil4Ctrl_araddr [7:0] $end
   $var wire  3 W axil4Ctrl_arprot [2:0] $end
   $var wire  1 U axil4Ctrl_arready $end
   $var wire  1 T axil4Ctrl_arvalid $end
   $var wire  8 K axil4Ctrl_awaddr [7:0] $end
   $var wire  3 L axil4Ctrl_awprot [2:0] $end
   $var wire  1 J axil4Ctrl_awready $end
   $var wire  1 I axil4Ctrl_awvalid $end
   $var wire  1 R axil4Ctrl_bready $end
   $var wire  2 S axil4Ctrl_bresp [1:0] $end
   $var wire  1 Q axil4Ctrl_bvalid $end
   $var wire 32 Z axil4Ctrl_rdata [31:0] $end
   $var wire  1 Y axil4Ctrl_rready $end
   $var wire  2 [ axil4Ctrl_rresp [1:0] $end
   $var wire  1 X axil4Ctrl_rvalid $end
   $var wire 32 O axil4Ctrl_wdata [31:0] $end
   $var wire  1 N axil4Ctrl_wready $end
   $var wire  4 P axil4Ctrl_wstrb [3:0] $end
   $var wire  1 M axil4Ctrl_wvalid $end
   $var wire  1 ^ clk $end
   $var wire 14 \ gpio_0 [13:0] $end
   $var wire 14 5 gpios_1_gpios_read [13:0] $end
   $var wire 14 $ gpios_1_gpios_read_1 [13:0] $end
   $var wire 14 % gpios_1_gpios_write [13:0] $end
   $var wire 14 & gpios_1_gpios_writeEnable [13:0] $end
   $var wire 14 C gpios_1_gpios_writeEnable_1_driver [13:0] $end
   $var wire 14 D gpios_1_gpios_write_1_driver [13:0] $end
   $var wire 14 # gpios_1_interrupt [13:0] $end
   $var wire 14 H gpios_1_ir_fall_driver [13:0] $end
   $var wire 14 E gpios_1_ir_high_driver [13:0] $end
   $var wire 14 F gpios_1_ir_low_driver [13:0] $end
   $var wire 14 G gpios_1_ir_rise_driver [13:0] $end
   $var wire  1 ] interrupt_0 $end
   $var wire  1 a readHaltRequest $end
   $var wire  1 ` readOccur $end
   $var wire 32 9 readRsp_data [31:0] $end
   $var wire  2 b readRsp_resp [1:0] $end
   $var wire  1 _ reset $end
   $var wire  1 ' when_AxiLite4Gpios_l38 $end
   $var wire  1 ( when_AxiLite4Gpios_l38_1 $end
   $var wire  1 1 when_AxiLite4Gpios_l38_10 $end
   $var wire  1 2 when_AxiLite4Gpios_l38_11 $end
   $var wire  1 3 when_AxiLite4Gpios_l38_12 $end
   $var wire  1 4 when_AxiLite4Gpios_l38_13 $end
   $var wire  1 ) when_AxiLite4Gpios_l38_2 $end
   $var wire  1 * when_AxiLite4Gpios_l38_3 $end
   $var wire  1 + when_AxiLite4Gpios_l38_4 $end
   $var wire  1 , when_AxiLite4Gpios_l38_5 $end
   $var wire  1 - when_AxiLite4Gpios_l38_6 $end
   $var wire  1 . when_AxiLite4Gpios_l38_7 $end
   $var wire  1 / when_AxiLite4Gpios_l38_8 $end
   $var wire  1 0 when_AxiLite4Gpios_l38_9 $end
   $var wire  1 @ when_Stream_l342 $end
   $var wire  1 B when_Stream_l342_1 $end
   $var wire  1 a writeHaltRequest $end
   $var wire  1 8 writeJoinEvent_fire $end
   $var wire  1 7 writeJoinEvent_ready $end
   $var wire  2 b writeJoinEvent_translated_payload_resp [1:0] $end
   $var wire  1 7 writeJoinEvent_translated_ready $end
   $var wire  1 6 writeJoinEvent_translated_valid $end
   $var wire  1 6 writeJoinEvent_valid $end
   $var wire  1 8 writeOccur $end
   $var wire  2 b writeRsp_resp [1:0] $end
   $scope module gpios_1 $end
    $var wire  1 ^ clk $end
    $var wire 14 5 gpios_read [13:0] $end
    $var wire 14 $ gpios_read_1 [13:0] $end
    $var wire 14 < gpios_read_buffercc_io_dataOut [13:0] $end
    $var wire 14 % gpios_write [13:0] $end
    $var wire 14 & gpios_writeEnable [13:0] $end
    $var wire 14 C gpios_writeEnable_1 [13:0] $end
    $var wire 14 D gpios_write_1 [13:0] $end
    $var wire 14 # interrupt [13:0] $end
    $var wire 14 ? interrupt_valid [13:0] $end
    $var wire 14 H ir_fall [13:0] $end
    $var wire 14 E ir_high [13:0] $end
    $var wire 14 F ir_low [13:0] $end
    $var wire 14 G ir_rise [13:0] $end
    $var wire 14 = last [13:0] $end
    $var wire  1 _ reset $end
    $var wire 14 < syncronized [13:0] $end
    $scope module gpios_read_buffercc $end
     $var wire 14 > buffers_0 [13:0] $end
     $var wire 14 < buffers_1 [13:0] $end
     $var wire  1 ^ clk $end
     $var wire 14 5 io_dataIn [13:0] $end
     $var wire 14 < io_dataOut [13:0] $end
     $var wire  1 _ reset $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000 #
b00111011100010 $
b00000000000000 %
b00000000000000 &
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
b00000000000000 5
06
17
08
b00000000000000000000000000000000 9
b00000101 :
b001 ;
b00111011100010 <
b00110100100010 =
b00111000110010 >
b00000000000000 ?
1@
0A
1B
b00000000000000 C
b00000000000000 D
b00000000000000 E
b00000000000000 F
b00000000000000 G
b00000000000000 H
0I
0J
b01010001 K
b001 L
0M
0N
b10001100000011000001101000001010 O
b1000 P
0Q
1R
b11 S
0T
1U
b11011111 V
b000 W
0X
1Y
b00000000000000000000000000000000 Z
b00 [
b00000000000000 \
0]
0^
1_
0`
0a
b00 b
#80
0_
#85
b00111000110010 $
b11011111 :
b000 ;
b00111000110010 <
b00111011100010 =
b00000000000000 >
b00 S
1^
#87
0^
#89
b00000000000000 $
b00000000000000 <
b00111000110010 =
1^
#91
0^
#93
b00000000000000 =
1^
#95
0^
#97
1^
#99
0^
#101
1^
#103
0^
#105
1^
#107
0^
#109
1^
#111
0^
#113
1^
#115
0^
#117
1^
#119
0^
#121
16
18
1I
1J
b00000000 K
b110 L
1M
1N
b00000000000000000000000000001111 O
b1111 P
1^
#123
0^
#125
b00000000001111 &
1'
1(
1)
1*
0@
b00000000001111 C
b00000100 K
b00000000000000000000000011111010 O
1Q
1^
#127
0^
#129
b00000011111010 %
b00000000001010 5
06
08
b00000011111010 D
0I
0J
0M
0N
b00000000001010 \
1^
#131
0^
#133
b00000000001010 >
1@
0Q
1^
#135
0^
#137
b00000000001010 $
b00000000001010 <
1^
#139
0^
#141
b00000000001010 =
1^
#143
0^
#145
1^
#147
0^
#149
1^
#151
0^
#153
1^
#155
0^
#157
1^
#159
0^
#161
1^
#163
0^
#165
1^
#167
0^
#169
1T
b00001000 V
b110 W
1^
#171
0^
#173
b00000000000000000000000000001010 9
b00001000 :
b110 ;
1A
0B
0T
1X
b00000000000000000000000000001010 Z
1^
1`
#175
0^
#177
0A
1B
0X
0Y
1^
0`
#179
0^
#181
1^
#183
0^
#185
1^
#187
0^
#189
1^
#191
0^
#193
1^
#195
0^
#197
1^
#199
0^
#201
1^
#203
0^
#205
1^
#207
0^
#209
1^
#211
0^
#213
1^
#215
0^
#217
16
18
1I
1J
1M
1N
b00000000000000000000000000000001 O
1^
#219
0^
#221
b00000000000001 %
b00000000000001 5
06
08
0@
b00000000000001 D
0I
0J
0M
0N
1Q
b00000000000001 \
1^
#223
0^
#225
b00000000000001 >
1@
0Q
1^
#227
0^
#229
b00000000000001 $
b00000000000000000000000000000001 9
b00000000000001 <
b00000000000000000000000000000001 Z
1^
#231
0^
#233
b00000000000001 =
1^
#235
0^
#237
1^
#239
0^
#241
1T
1Y
1^
#243
0^
#245
1A
0B
0T
1X
1^
1`
#247
0^
#249
0A
1B
0X
0Y
1^
0`
#251
0^
#253
1^
#255
0^
#257
1^
#259
0^
#261
1^
#263
0^
#265
1^
#267
0^
#269
1^
#271
0^
#273
1^
#275
0^
#277
1^
#279
0^
#281
1^
#283
0^
#285
1^
#287
0^
#289
