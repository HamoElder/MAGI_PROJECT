$version Generated by VerilatedVcd $end
$date Thu Oct 21 21:19:59 2021
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 -% clc $end
  $var wire  1 5% clk $end
  $var wire  1 %% raw_data_ready $end
  $var wire  1 {$ raw_data_valid $end
  $var wire  1 =% reset $end
  $scope module ViterbiDecoder $end
   $var wire  1 -% clc $end
   $var wire  1 5% clk $end
   $var wire  2 G" pmu_core_min_idx [1:0] $end
   $var wire  4 O" pmu_core_s_path_payload [3:0] $end
   $var wire  1 c$ pmu_core_s_path_valid $end
   $var wire  1 %% raw_data_ready $end
   $var wire  1 {$ raw_data_valid $end
   $var wire  1 =% reset $end
   $scope module pmu_core $end
    $var wire  1 + addCompareSelect_4_decision $end
    $var wire 16 W" addCompareSelect_4_dist_0 [15:0] $end
    $var wire 16 _" addCompareSelect_4_dist_1 [15:0] $end
    $var wire 16 # addCompareSelect_4_state_weight [15:0] $end
    $var wire  1 ; addCompareSelect_5_decision $end
    $var wire 16 g" addCompareSelect_5_dist_0 [15:0] $end
    $var wire 16 o" addCompareSelect_5_dist_1 [15:0] $end
    $var wire 16 3 addCompareSelect_5_state_weight [15:0] $end
    $var wire  1 K addCompareSelect_6_decision $end
    $var wire 16 w" addCompareSelect_6_dist_0 [15:0] $end
    $var wire 16 !# addCompareSelect_6_dist_1 [15:0] $end
    $var wire 16 C addCompareSelect_6_state_weight [15:0] $end
    $var wire  1 [ addCompareSelect_7_decision $end
    $var wire 16 )# addCompareSelect_7_dist_0 [15:0] $end
    $var wire 16 1# addCompareSelect_7_dist_1 [15:0] $end
    $var wire 16 S addCompareSelect_7_state_weight [15:0] $end
    $var wire  2 E% branchMetric_4_dist_0 [1:0] $end
    $var wire  2 M% branchMetric_4_dist_1 [1:0] $end
    $var wire  2 U% branchMetric_5_dist_0 [1:0] $end
    $var wire  2 ]% branchMetric_5_dist_1 [1:0] $end
    $var wire  2 M% branchMetric_6_dist_0 [1:0] $end
    $var wire  2 E% branchMetric_6_dist_1 [1:0] $end
    $var wire  2 ]% branchMetric_7_dist_0 [1:0] $end
    $var wire  2 U% branchMetric_7_dist_1 [1:0] $end
    $var wire  2 a# candidate_branches_0 [1:0] $end
    $var wire  2 i# candidate_branches_1 [1:0] $end
    $var wire  2 q# candidate_branches_2 [1:0] $end
    $var wire  2 y# candidate_branches_3 [1:0] $end
    $var wire  2 #$ candidate_branches_4 [1:0] $end
    $var wire  2 +$ candidate_branches_5 [1:0] $end
    $var wire  2 3$ candidate_branches_6 [1:0] $end
    $var wire  2 ;$ candidate_branches_7 [1:0] $end
    $var wire  1 -% clc $end
    $var wire  1 5% clk $end
    $var wire  2 G" minVal_1_min_idx [1:0] $end
    $var wire 16 9# minVal_1_min_val [15:0] $end
    $var wire  2 G" min_idx [1:0] $end
    $var wire 16 A# node_weight_0 [15:0] $end
    $var wire 16 I# node_weight_1 [15:0] $end
    $var wire 16 Q# node_weight_2 [15:0] $end
    $var wire 16 Y# node_weight_3 [15:0] $end
    $var wire  1 s$ raw_data_next $end
    $var wire  1 {$ raw_data_valid $end
    $var wire  1 =% reset $end
    $var wire  4 O" s_path_payload [3:0] $end
    $var wire  1 c$ s_path_valid $end
    $var wire  4 O" survival_path [3:0] $end
    $var wire  1 c$ survival_path_valid $end
    $scope module addCompareSelect_4 $end
     $var wire 16 c branch_weight_0 [15:0] $end
     $var wire 16 k branch_weight_1 [15:0] $end
     $var wire  1 + decision $end
     $var wire 16 W" dist_0 [15:0] $end
     $var wire 16 _" dist_1 [15:0] $end
     $var wire 16 A# last_state_weight_0 [15:0] $end
     $var wire 16 I# last_state_weight_1 [15:0] $end
     $var wire 16 # state_weight [15:0] $end
     $var wire  1 s when_AddCompareSelect_l17 $end
    $upscope $end
    $scope module addCompareSelect_5 $end
     $var wire 16 { branch_weight_0 [15:0] $end
     $var wire 16 %! branch_weight_1 [15:0] $end
     $var wire  1 ; decision $end
     $var wire 16 g" dist_0 [15:0] $end
     $var wire 16 o" dist_1 [15:0] $end
     $var wire 16 Q# last_state_weight_0 [15:0] $end
     $var wire 16 Y# last_state_weight_1 [15:0] $end
     $var wire 16 3 state_weight [15:0] $end
     $var wire  1 -! when_AddCompareSelect_l17 $end
    $upscope $end
    $scope module addCompareSelect_6 $end
     $var wire 16 5! branch_weight_0 [15:0] $end
     $var wire 16 =! branch_weight_1 [15:0] $end
     $var wire  1 K decision $end
     $var wire 16 w" dist_0 [15:0] $end
     $var wire 16 !# dist_1 [15:0] $end
     $var wire 16 A# last_state_weight_0 [15:0] $end
     $var wire 16 I# last_state_weight_1 [15:0] $end
     $var wire 16 C state_weight [15:0] $end
     $var wire  1 E! when_AddCompareSelect_l17 $end
    $upscope $end
    $scope module addCompareSelect_7 $end
     $var wire 16 M! branch_weight_0 [15:0] $end
     $var wire 16 U! branch_weight_1 [15:0] $end
     $var wire  1 [ decision $end
     $var wire 16 )# dist_0 [15:0] $end
     $var wire 16 1# dist_1 [15:0] $end
     $var wire 16 Q# last_state_weight_0 [15:0] $end
     $var wire 16 Y# last_state_weight_1 [15:0] $end
     $var wire 16 S state_weight [15:0] $end
     $var wire  1 ]! when_AddCompareSelect_l17 $end
    $upscope $end
    $scope module branchMetric_4 $end
     $var wire  2 E% dist_0 [1:0] $end
     $var wire  2 M% dist_1 [1:0] $end
     $var wire  2 E% hammingDistance_8_distance [1:0] $end
     $var wire  2 M% hammingDistance_9_distance [1:0] $end
     $scope module hammingDistance_8 $end
      $var wire  2 E% distance [1:0] $end
      $var wire  2 '& in_a [1:0] $end
      $var wire  2 e% in_b [1:0] $end
      $var wire  2 e% xorResult [1:0] $end
     $upscope $end
     $scope module hammingDistance_9 $end
      $var wire  2 M% distance [1:0] $end
      $var wire  2 /& in_a [1:0] $end
      $var wire  2 e% in_b [1:0] $end
      $var wire  2 m% xorResult [1:0] $end
     $upscope $end
    $upscope $end
    $scope module branchMetric_5 $end
     $var wire  2 U% dist_0 [1:0] $end
     $var wire  2 ]% dist_1 [1:0] $end
     $var wire  2 U% hammingDistance_8_distance [1:0] $end
     $var wire  2 ]% hammingDistance_9_distance [1:0] $end
     $scope module hammingDistance_8 $end
      $var wire  2 U% distance [1:0] $end
      $var wire  2 7& in_a [1:0] $end
      $var wire  2 e% in_b [1:0] $end
      $var wire  2 u% xorResult [1:0] $end
     $upscope $end
     $scope module hammingDistance_9 $end
      $var wire  2 ]% distance [1:0] $end
      $var wire  2 ?& in_a [1:0] $end
      $var wire  2 e% in_b [1:0] $end
      $var wire  2 }% xorResult [1:0] $end
     $upscope $end
    $upscope $end
    $scope module branchMetric_6 $end
     $var wire  2 M% dist_0 [1:0] $end
     $var wire  2 E% dist_1 [1:0] $end
     $var wire  2 M% hammingDistance_8_distance [1:0] $end
     $var wire  2 E% hammingDistance_9_distance [1:0] $end
     $scope module hammingDistance_8 $end
      $var wire  2 M% distance [1:0] $end
      $var wire  2 /& in_a [1:0] $end
      $var wire  2 e% in_b [1:0] $end
      $var wire  2 m% xorResult [1:0] $end
     $upscope $end
     $scope module hammingDistance_9 $end
      $var wire  2 E% distance [1:0] $end
      $var wire  2 '& in_a [1:0] $end
      $var wire  2 e% in_b [1:0] $end
      $var wire  2 e% xorResult [1:0] $end
     $upscope $end
    $upscope $end
    $scope module branchMetric_7 $end
     $var wire  2 ]% dist_0 [1:0] $end
     $var wire  2 U% dist_1 [1:0] $end
     $var wire  2 ]% hammingDistance_8_distance [1:0] $end
     $var wire  2 U% hammingDistance_9_distance [1:0] $end
     $scope module hammingDistance_8 $end
      $var wire  2 ]% distance [1:0] $end
      $var wire  2 ?& in_a [1:0] $end
      $var wire  2 e% in_b [1:0] $end
      $var wire  2 }% xorResult [1:0] $end
     $upscope $end
     $scope module hammingDistance_9 $end
      $var wire  2 U% distance [1:0] $end
      $var wire  2 7& in_a [1:0] $end
      $var wire  2 e% in_b [1:0] $end
      $var wire  2 u% xorResult [1:0] $end
     $upscope $end
    $upscope $end
    $scope module minVal_1 $end
     $var wire 16 A# data_0 [15:0] $end
     $var wire 16 I# data_1 [15:0] $end
     $var wire 16 Q# data_2 [15:0] $end
     $var wire 16 Y# data_3 [15:0] $end
     $var wire  2 G" min_idx [1:0] $end
     $var wire 16 9# min_val [15:0] $end
    $upscope $end
   $upscope $end
   $scope module tbu_core $end
    $var wire  1 -% clc $end
    $var wire  1 5% clk $end
    $var wire 168 O& decoded_lifo_0 [167:0] $end
    $var wire 168 !' decoded_lifo_1 [167:0] $end
    $var wire  3 m! fsm_stateNext [2:0] $end
    $var wire 96 /" fsm_stateNext_string [95:0] $end
    $var wire  3 k$ fsm_stateReg [2:0] $end
    $var wire 96 u! fsm_stateReg_string [95:0] $end
    $var wire  1 Q' fsm_wantExit $end
    $var wire  1 Q' fsm_wantKill $end
    $var wire  1 e! fsm_wantStart $end
    $var wire  2 G" min_idx [1:0] $end
    $var wire  8 C$ ram_addr_in [7:0] $end
    $var wire  8 G& ram_addr_out [7:0] $end
    $var wire  1 K$ ram_sel $end
    $var wire  1 =% reset $end
    $var wire  4 O" s_path_payload [3:0] $end
    $var wire  1 c$ s_path_valid $end
    $var wire  1 S$ when_Traceback_l32 $end
    $var wire  1 [$ when_Traceback_l50 $end
    $var wire  1 [$ when_Traceback_l69 $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b1010110111110010 #
1+
b0001110010101000 3
0;
b1010110111110011 C
1K
b0001110010101001 S
0[
b1100110111110010 c
b1010110111110010 k
0s
b0001110010101000 {
b0110100101101111 %!
1-!
b1100110111110011 5!
b1010110111110011 =!
0E!
b0001110010101001 M!
b0110100101110001 U!
1]!
1e!
b001 m!
b011001100111001101101101010111110100001001001111010011110101010000100000001000000010000000100000 u!
b011001100111001101101101010111110100100101000100010011000100010100100000001000000010000000100000 /"
b10 G"
b0000 O"
b0000000000000001 W"
b0000000000000001 _"
b0000000000000000 g"
b0000000000000001 o"
b0000000000000010 w"
b0000000000000010 !#
b0000000000000001 )#
b0000000000000011 1#
b0001110010101000 9#
b1100110111110001 A#
b1010110111110001 I#
b0001110010101000 Q#
b0110100101101110 Y#
b01 a#
b01 i#
b00 q#
b01 y#
b10 #$
b10 +$
b01 3$
b11 ;$
b11001000 C$
1K$
1S$
0[$
0c$
b000 k$
0s$
0{$
1%%
1-%
05%
1=%
b10 E%
b00 M%
b01 U%
b01 ]%
b11 e%
b00 m%
b01 u%
b10 }%
b00 '&
b11 /&
b10 7&
b01 ?&
b11000010 G&
b101100000001100101010000100011010011110100111100001001000011010110110001110001101100111010100101000011111100010100011001100100011001001110001100110010010110111100010010 O&
b000110101001101110110010011010100010011000010010000001011001011101100110110000111111001110111010110111101110111001110000011001000111100001110111010010100011110101111101 !'
0Q'
#80
0=%
#85
b0000000000000000 #
b0000000000000001 3
b0000000000000000 C
0K
b0000000000000001 S
b0000000000000010 c
b0000000000000000 k
b0000000000000001 {
b0000000000000001 %!
b0000000000000000 5!
b0000000000000010 =!
1E!
b0000000000000001 M!
b0000000000000001 U!
0e!
b011001100111001101101101010111110100100101000100010011000100010100100000001000000010000000100000 u!
b00 G"
b0000000000000010 W"
b0000000000000000 _"
b0000000000000001 g"
b0000000000000000 w"
b0000000000000001 1#
b0000000000000000 9#
b0000000000000000 A#
b0000000000000000 I#
b0000000000000000 Q#
b0000000000000000 Y#
b10 a#
b00 i#
b01 q#
b00 #$
b01 ;$
b00000000 C$
0K$
0S$
b001 k$
15%
#87
05%
#89
15%
#91
05%
#93
15%
#95
05%
#97
15%
#99
05%
#101
15%
#103
05%
#105
15%
#107
05%
#109
15%
#111
05%
#113
15%
#115
05%
#117
15%
#119
05%
#121
0-%
15%
#123
05%
#125
1{$
15%
#127
05%
#129
1s$
15%
b00 E%
b10 M%
b00 e%
b11 m%
b10 u%
b01 }%
#131
05%
#133
0+
b0000000000000001 C
1K
b0000000000000000 c
b0000000000000011 k
1s
b0000000000000010 %!
b0000000000000010 5!
b0000000000000001 =!
0E!
b0000000000000010 U!
b0001 O"
b0000000000000000 W"
b0000000000000010 _"
b0000000000000010 w"
b0000000000000000 !#
b0000000000000001 I#
b0000000000000001 Y#
b00 a#
b10 i#
b10 #$
b00 +$
1c$
15%
b10 E%
b00 M%
b11 e%
b00 m%
b01 u%
b10 }%
#135
05%
#137
b0000000000000001 #
1+
b0000000000000010 3
b0000000000000000 C
0K
b0000000000000010 S
b0000000000000010 c
b0000000000000001 k
0s
b0000000000000010 {
b0000000000000000 5!
b0000000000000011 =!
1E!
b0000000000000010 M!
b0100 O"
b0000000000000010 W"
b0000000000000000 _"
b0000000000000000 w"
b0000000000000010 !#
b0000000000000001 Q#
b10 a#
b00 i#
b00 #$
b10 +$
b00000001 C$
15%
#139
05%
#141
b0000000000000010 #
b0000000000000001 3
b0000000000000001 C
b0000000000000001 S
b0000000000000011 c
b0000000000000010 k
b0000000000000001 {
b0000000000000011 %!
b0000000000000001 5!
b0000000000000100 =!
b0000000000000001 M!
b0000000000000011 U!
b10 G"
b0001 O"
b0000000000000001 A#
b0000000000000010 I#
b0000000000000000 Q#
b0000000000000010 Y#
b00000010 C$
15%
b01 E%
b01 M%
b10 U%
b00 ]%
b01 e%
b10 m%
b11 u%
b00 }%
#143
05%
#145
1;
b0000000000000010 C
1K
b0000000000000011 {
b0000000000000001 %!
0-!
b0000000000000011 5!
b0000000000000010 =!
0E!
b01 G"
b0000000000000001 W"
b0000000000000001 _"
b0000000000000010 g"
b0000000000000000 o"
b0000000000000001 w"
b0000000000000001 !#
b0000000000000000 )#
b0000000000000010 1#
b0000000000000001 9#
b0000000000000010 A#
b0000000000000001 I#
b0000000000000001 Q#
b0000000000000001 Y#
b01 a#
b01 i#
b10 q#
b00 y#
b01 #$
b01 +$
b00 3$
b10 ;$
b00000011 C$
15%
#147
05%
#149
b0000000000000010 S
b0000000000000100 {
b0000000000000010 M!
b0111 O"
b0000000000000010 Q#
b00000100 C$
15%
b10 E%
b00 M%
b01 U%
b01 ]%
b11 e%
b00 m%
b01 u%
b10 }%
#151
05%
#153
b0000000000000001 #
b0000000000000011 3
0;
0K
b0000000000000011 S
b0000000000000100 c
b0000000000000001 k
b0000000000000011 {
b0000000000000011 %!
1-!
b0000000000000010 5!
b0000000000000011 =!
1E!
b0000000000000011 M!
b0000000000000010 W"
b0000000000000000 _"
b0000000000000001 g"
b0000000000000001 o"
b0000000000000000 w"
b0000000000000010 !#
b0000000000000001 )#
b0000000000000001 1#
b0000000000000010 Y#
b10 a#
b00 i#
b01 q#
b01 y#
b00 #$
b10 +$
b01 3$
b01 ;$
b00000101 C$
0{$
15%
#155
05%
#157
b0000000000000011 #
0+
b0000000000000001 C
b0000000000000011 c
b0000000000000011 k
1s
b0000000000000100 %!
b0000000000000001 5!
b0000000000000101 =!
b0000000000000100 U!
b00 G"
b0001 O"
b0000000000000001 A#
b0000000000000011 I#
b0000000000000011 Y#
b00000110 C$
0s$
15%
#159
05%
#161
b00000111 C$
1S$
0c$
15%
#163
05%
#165
15%
#167
05%
#169
15%
#171
05%
#173
15%
#175
05%
#177
15%
#179
05%
#181
15%
#183
05%
#185
15%
#187
05%
#189
15%
#191
05%
#193
15%
#195
05%
#197
15%
#199
05%
#201
15%
#203
05%
#205
15%
#207
05%
#209
15%
#211
05%
#213
15%
#215
05%
#217
15%
#219
05%
#221
15%
#223
05%
#225
15%
#227
05%
#229
15%
#231
05%
#233
15%
#235
05%
#237
15%
#239
05%
#241
15%
#243
05%
#245
15%
#247
05%
#249
15%
#251
05%
#253
15%
#255
05%
#257
15%
#259
05%
#261
15%
#263
05%
#265
15%
#267
05%
#269
15%
#271
05%
#273
15%
#275
05%
#277
15%
#279
05%
#281
15%
#283
05%
#285
15%
#287
05%
#289
15%
#291
05%
#293
15%
#295
05%
#297
15%
#299
05%
#301
15%
#303
05%
#305
15%
#307
05%
#309
15%
#311
05%
#313
15%
#315
05%
#317
15%
#319
05%
#321
15%
#323
05%
#325
15%
#327
05%
#329
15%
#331
05%
#333
15%
#335
05%
#337
15%
#339
05%
#341
15%
#343
05%
#345
15%
#347
05%
#349
15%
#351
05%
#353
15%
#355
05%
#357
15%
#359
05%
#361
15%
#363
05%
#365
15%
#367
05%
#369
15%
#371
05%
#373
15%
#375
05%
#377
15%
#379
05%
#381
15%
#383
05%
#385
15%
#387
05%
#389
15%
#391
05%
#393
15%
#395
05%
#397
15%
#399
05%
#401
15%
#403
05%
#405
15%
#407
05%
#409
15%
#411
05%
#413
15%
#415
05%
#417
15%
#419
05%
#421
15%
#423
05%
#425
15%
#427
05%
#429
15%
#431
05%
#433
15%
#435
05%
#437
15%
#439
05%
#441
15%
#443
05%
#445
15%
#447
05%
#449
15%
#451
05%
#453
15%
#455
05%
#457
15%
#459
05%
#461
15%
#463
05%
#465
15%
#467
05%
#469
15%
#471
05%
#473
15%
#475
05%
#477
15%
#479
05%
#481
15%
#483
05%
#485
15%
#487
05%
#489
15%
#491
05%
#493
15%
#495
05%
#497
15%
#499
05%
#501
15%
#503
05%
#505
15%
#507
05%
#509
15%
#511
05%
#513
15%
#515
05%
#517
15%
#519
05%
#521
15%
#523
05%
#525
15%
#527
05%
#529
15%
#531
05%
#533
15%
#535
05%
#537
15%
#539
05%
#541
15%
#543
05%
#545
15%
#547
05%
#549
15%
#551
05%
#553
